# coding=gbk
'''
Created on 2017年9月26日

@author: RHy0ThoM
'''
from _overlapped import NULL

            
# check exploitability of vulnerabilities in reachable software application
# check usability of information sources in reachable software applications

foundPrivileges = [] 

def CheckExploitability(SP,CP,TSA) :                           
    '''
    SP can be a vulnerabilities or information source
    CP is the current privilege
    TSA is the target software application
    '''
    reqprgs = FormPrivileges(SP.Preconditions,CP.ApplicationName,TSA)
    print('-------------------')
    print(reqprgs)
    '''
    if not(CP in reqprgs):
        return NULL
    for rqp in reqprgs :
        if not(rqp in foundPrivileges):                        # 发现特权
            rqps = ReadFromSharedMemory(rqp)                   # 从共享内存读取
            if rqps.expanded == False:
# 如果没有扩展特权，那么这意味着到目前为止，它不是由任何代理生成的
                return NULL
                '''
    return reqprgs


'''
the FormPrivileges() function makes the given conditions of the input vulnerabilities or information source 
specific to the given source and target software application by adding the information of the source and target
software application to them 
'''

def FormPrivileges(PreConditions, SoftwareApp, TSA):
    print('----------------------------------')
    print(PreConditions)
    print(SoftwareApp)
    for i in TSA.InformationSource:
        print(i.Preconditions)
        print(i.name)
        if PreConditions == i.Preconditions:
            if SoftwareApp == i.name:
                return i.Postconditions
    for i in TSA.Vulnerabilities:
        print('-------------TSA.Vul-----------------')
        print(i.CVEId)
        print('-------------------------------------')
        if PreConditions in i.Preconditions:
            if SoftwareApp == i.name:
                return i.Postconditions
def ReadFromSharedMemory(rqp):
    pass 
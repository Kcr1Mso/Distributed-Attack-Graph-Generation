# coding=gbk
'''
Created on 2017年9月26日

@author: RHy0ThoM
'''
from _overlapped import NULL
from NetworkModel.SoftwareApplication import SoftwareApplication

            
# check exploitability of vulnerabilities in reachable software application
# check usability of information sources in reachable software applications

foundPrivileges =  Set() 

def CheckExploitability(SP,CP,TSA) :                           
    '''
    SP can be a vulnerabilities or information source
    CP is the current privilege
    TSA is the target software application
    '''
    reqprgs = FormPrivileges(SP.preConditions,CP.SoftwareApplication,TSA)
    if not(CP in reqprgs):
        return NULL
    for rqp in reqprgs :
        if not(rqp in foundPrivileges):                        # 发现特权
            rqps = ReadFromSharedMemory(rqp)                   # 从共享内存读取
            if rqps.expanded == False:
# 如果没有扩展特权，那么这意味着到目前为止，它不是由任何代理生成的
                return NULL
    return reqprgs

def FormPrivileges(PreConditions, SoftwareApp, TSA):
    pass

def ReadFromSharedMemory(rqp):
    pass